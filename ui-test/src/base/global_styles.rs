use anyhow::Result;
use test_engine::{
    from_main,
    refs::Weak,
    ui::{
        Anchor::{Top, X},
        Button, Color, HasText, Setup, Style, UI, ViewData, ViewSubviews, view,
    },
    ui_test::check_colors,
};

const GLOBAL_STYLE: Style = Style::new(|view| {
    view.set_color((175, 129, 115));
    view.set_corner_radius(20);

    if let Some(mut view) = view.downcast_view::<Button>() {
        view.set_text_color(Color::BLUE);
        view.set_text_size(55);
    }
});

#[view]
struct GlobalStyles {
    #[init]
    button_1: Button,
    button_2: Button,
    button_3: Button,
}

impl Setup for GlobalStyles {
    fn setup(mut self: Weak<Self>) {
        self.button_1.set_text("Button 1").place().t(50).l(50).size(200, 50);

        self.button_2.set_text("Button 2");
        self.button_2
            .place()
            .anchor(Top, self.button_1, 40)
            .same_size(self.button_1)
            .same([X], self.button_1);

        self.button_3.set_text("Button 3");
        self.button_3
            .place()
            .anchor(Top, self.button_2, 40)
            .same_size(self.button_1)
            .same([X], self.button_1);
    }
}

pub async fn test_global_styles() -> Result<()> {
    from_main(|| {
        GLOBAL_STYLE.apply_to_all::<Button>();
    })
    .await;

    UI::init_test_view::<GlobalStyles>().await;

    check_colors(
        r#"
              32   70 -  89 124 149
              49   68 -  89 124 149
              76   73 -   6   3 231
              96   77 - 175 129 115
             175   70 -  96  69 208
             188   75 - 175 129 115
             244   75 - 175 129 115
             258   76 -  89 124 149
             280  119 -  89 124 149
             263  164 -  89 124 149
             231  170 - 175 129 115
             175  153 -  46  31 226
             104  147 - 175 129 115
              95  152 - 175 129 115
              75  157 -   6   3 231
              54  161 - 175 129 115
              50  198 -  89 124 149
              62  236 - 175 129 115
              62  247 - 175 129 115
             114  254 -   0   0 231
             174  255 -  53  37 224
             196  254 - 104  76 203
             227  249 - 175 129 115
             242  242 - 175 129 115
             243  232 -  89 124 149
             242  218 -  89 124 149
             247  226 -  89 124 149
             236  244 - 175 129 115
             233  252 - 175 129 115
             248  267 - 175 129 115
             248  274 -  89 124 149
             180  297 -  89 124 149
              82  290 -  89 124 149
              48  277 -  89 124 149
              50  253 - 175 129 115
              81  249 -   6   3 231
              73  267 - 175 129 115
              66  250 - 175 129 115
             113  250 -   0   0 231
             154  249 - 175 129 115
             190  245 -   6   3 231
             191  245 -   6   3 231
              74  238 - 134  98 179
              56  233 -  89 124 149
              39  223 -  89 124 149
              41  206 -  89 124 149
              61  175 - 175 129 115
              85  155 - 175 129 115
              82  131 -  89 124 149
              63  137 -  89 124 149
              51  117 -  89 124 149
              55   67 - 175 129 115
              54   33 -  89 124 149
              72   28 -  89 124 149
              90   67 -  16   9 230
              71   85 - 175 129 115
             174   79 -   6   3 231
             199   72 - 175 129 115
             220   64 -   6   3 231
             242   61 - 175 129 115
             277   47 -  89 124 149
             257  137 -  89 124 149
             208  165 - 175 129 115
             137  162 - 175 129 115
              60  160 - 175 129 115
              79  214 -  89 124 149
             113  243 -   0   0 231
             191  259 -  67  47 220
             237  274 - 175 129 115
             203  276 - 175 129 115
             129  276 - 175 129 115
        "#,
    )
    .await?;

    from_main(|| {
        GLOBAL_STYLE.reset_global::<Button>();
    })
    .await;

    UI::reload_test_view::<GlobalStyles>().await;

    check_colors(
        r#"
              36   72 -  89 124 149
              48   63 -  89 124 149
              58   59 - 255 255 255
              76   36 -  89 124 149
              77   46 -  89 124 149
              60   75 - 255 255 255
              55   92 - 255 255 255
             115   57 - 255 255 255
             135   39 -  89 124 149
             136   72 - 255 255 255
             115   97 - 255 255 255
             118   94 - 255 255 255
             151   64 - 255 255 255
             199   45 -  89 124 149
             211   51 - 255 255 255
             203   82 - 240 240 240
             200  105 -  89 124 149
             223   84 - 255 255 255
             262   63 -  89 124 149
             240  105 -  89 124 149
             234  101 -  89 124 149
             234  202 -  89 124 149
             250  171 -  89 124 149
             261  149 -  89 124 149
             242  182 - 255 255 255
             226  195 -  89 124 149
             224  176 - 255 255 255
             232  131 -  89 124 149
             204  162 -   0   0   0
             172  182 - 255 255 255
             202  118 -  89 124 149
             177  175 - 255 255 255
             139  192 -  89 124 149
             132  176 - 255 255 255
             138  136 -  89 124 149
             139  130 -  89 124 149
              92  183 - 255 255 255
              87  193 -  89 124 149
              93  140 - 255 255 255
              83  134 -  89 124 149
              43  174 -  89 124 149
              50  162 - 255 255 255
              70  117 -  89 124 149
              50  248 - 255 255 255
              40  249 -  89 124 149
              72  213 -  89 124 149
              78  208 -  89 124 149
              52  254 - 255 255 255
              48  267 -  89 124 149
              94  256 -   0   0   0
             145  228 -  89 124 149
             153  246 - 239 239 239
             119  284 -  89 124 149
             134  266 - 255 255 255
             164  237 - 255 255 255
             192  215 -  89 124 149
             181  272 - 255 255 255
             183  289 -  89 124 149
             219  224 -  89 124 149
             231  212 -  89 124 149
             221  273 - 255 255 255
             218  280 -  89 124 149
             260  231 -  89 124 149
             228  266 - 255 255 255
             227  284 -  89 124 149
             242  283 -  89 124 149
             257  269 -  89 124 149
        "#,
    )
    .await?;

    Ok(())
}
