use anyhow::Result;
use test_engine::{
    refs::Weak,
    ui::{
        Anchor::{Left, Top, X},
        BLACK, Button, Container, GREEN, HasText, PURPLE, RED, Setup, TURQUOISE, UI, ViewData, ViewSubviews,
        WHITE, view,
    },
    ui_test::check_colors,
};

#[view]
struct Gradient {
    button: Weak<Button>,

    #[init]
    grad_1: Container,
    grad_2: Container,
    grad_3: Container,

    button_container: Container,
}

impl Setup for Gradient {
    fn setup(mut self: Weak<Self>) {
        self.grad_1.set_gradient(RED, GREEN).place().tl(20).size(100, 100);

        self.grad_2.set_gradient(TURQUOISE, PURPLE).set_corner_radius(28);
        self.grad_2.place().t(20).size(100, 200).anchor(Left, self.grad_1, 20);

        self.grad_3.set_gradient(WHITE, BLACK).set_corner_radius(20);
        self.grad_3.place().t(20).size(200, 100).anchor(Left, self.grad_2, 20);

        self.button_container
            .place()
            .same([X], self.grad_1)
            .anchor(Top, self.grad_2, 40)
            .size(280, 100);

        self.button = self.button_container.add_view();

        self.button.place().back();
        self.button.set_text("Button").set_gradient(WHITE, RED).set_corner_radius(40);
    }
}

pub async fn test_gradient() -> Result<()> {
    UI::init_test_view::<Gradient>().await;

    check_colors(
        r#"
              66  133 -  89 124 149
              66  134 -  89 124 149
              66  113 -  72 248   0
              65  107 -  99 241   0
              65   92 - 143 221   0
              63   76 - 176 198   0
              62   66 - 193 182   0
              61   41 - 229 128   0
              61   29 - 244  87   0
              62   23 - 251  53   0
              65   14 -  89 124 149
              67   12 -  89 124 149
              70    8 -  89 124 149
              76    5 -  89 124 149
              97   13 -  89 124 149
             102   37 - 234 116   0
             102   57 - 207 165   0
              98   76 - 176 198   0
             109  137 -  89 124 149
             116  134 -  89 124 149
             142  109 - 178 196 255
             148   76 - 145 220 255
             149   54 - 115 235 255
             151   31 -  68 248 255
             151   24 -  89 124 149
             149   16 -  89 124 149
             149   12 -  89 124 149
             158   61 - 126 230 255
             160  118 - 186 189 255
             162  194 - 240 100 255
             159  219 -  89 124 149
             172  242 -  89 124 149
             198  241 -  89 124 149
             198  223 -  89 124 149
             189  197 - 242  94 255
             189  178 - 230 126 255
             191  127 - 194 181 255
             198   66 - 133 227 255
             199   47 - 104 239 255
             199   27 -  54 251 255
             202   11 -  89 124 149
             210    6 -  89 124 149
             226    7 -  89 124 149
             229   21 -  89 124 149
             224   47 - 104 239 255
             227   97 - 167 205 255
             227  142 - 205 167 255
             221  179 - 231 124 255
             222  219 -  89 124 149
             273  210 -  89 124 149
             278  163 -  89 124 149
             280  135 -  89 124 149
             281  103 - 113 113 113
             282   73 - 182 182 182
             283   50 - 217 217 217
             283   25 - 249 249 249
             283   11 -  89 124 149
             285    8 -  89 124 149
             300    9 -  89 124 149
             309   11 -  89 124 149
             309   41 - 229 229 229
             311   77 - 174 174 174
             315  108 -  95  95  95
             329  130 -  89 124 149
             351  131 -  89 124 149
             353  110 -  87  87  87
             353   97 - 130 130 130
             352   74 - 180 180 180
             352   46 - 223 223 223
             352   35 - 237 237 237
             354   21 - 253 253 253
             355   10 -  89 124 149
             360    4 -  89 124 149
             381   11 -  89 124 149
             391   38 - 233 233 233
             397   74 - 180 180 180
             405  103 - 113 113 113
             409  121 -  89 124 149
             432  135 -  89 124 149
             436  122 -  89 124 149
             433  103 - 113 113 113
             431   57 - 207 207 207
             432   49 - 219 219 219
             436   26 - 248 248 248
             441   21 - 253 253 253
             456   16 -  89 124 149
             463   23 -  89 124 149
             458   62 - 200 200 200
             443  114 -  66  66  66
             419  115 -  60  60  60
             367  109 -  91  91  91
             256   66 -  89 124 149
             201   75 - 144 221 255
             146   78 - 147 219 255
        "#,
    )
    .await?;

    check_colors(
        r#"
              21  365 -  89 124 149
              41  360 -  89 124 149
              46  351 - 255  82  82
              66  340 - 255 122 122
              93  324 - 255 161 161
             109  318 - 255 172 172
             170  293 - 255 213 213
             176  289 - 255 219 219
             226  289 - 255 219 219
             247  289 - 255 219 219
             269  289 - 255 219 219
             274  279 - 255 232 232
             289  276 - 255 236 236
             302  268 -  89 124 149
             309  263 -  89 124 149
             335  252 -  89 124 149
             317  384 -  89 124 149
             308  368 -  89 124 149
             287  346 - 255 103 103
             237  321 - 255 167 167
             112  308 - 255 190 190
              57  289 - 255 219 219
              39  278 - 255 233 233
              28  275 - 255 237 237
              24  267 -  89 124 149
              20  259 -  89 124 149
              18  250 -  89 124 149
              18  237 -  89 124 149
              42  232 -  89 124 149
        "#,
    )
    .await?;

    Ok(())
}
