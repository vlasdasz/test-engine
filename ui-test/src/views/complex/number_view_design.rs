use anyhow::Result;
use test_engine::{
    dispatch::from_main,
    refs::Weak,
    ui::{BLUE, HasText, LIGHT_GRAY, NumberView, Setup, Style, UI, ViewData, ViewSubviews, view},
    ui_test::check_colors,
};

const STYLE: Style = Style::new(|view| {
    view.apply_if::<NumberView>(|num| {
        num.set_labels("+", "â€“")
            .set_text_color(LIGHT_GRAY)
            .set_text_size(80)
            .set_gradient(BLUE, (0, 150, 150))
            .set_corner_radius(20);
    })
});

#[view]
struct NumberViewDesign {
    #[init]
    view: NumberView,
}

impl Setup for NumberViewDesign {
    fn setup(self: Weak<Self>) {
        self.view.place().tl(200).size(100, 200);
    }
}

pub async fn test_number_view_design() -> Result<()> {
    from_main(|| {
        STYLE.apply_globally::<NumberView>();
    })
    .await;

    let _view = UI::init_test_view::<NumberViewDesign>().await;

    check_colors(
        r#"
             208  422 -  89 124 149
             208  420 -  89 124 149
             212  415 -  89 124 149
             214  411 -  89 124 149
             216  408 -  89 124 149
             221  404 -  89 124 149
             223  399 -   0 150 150
             225  394 -   0 148 153
             226  389 -   0 146 156
             230  379 -   0 143 161
             230  375 -   0 141 163
             232  373 -   0 141 164
             238  369 -   0 139 166
             243  367 -   0 138 167
             246  358 -   0 135 171
             245  357 -   0 134 172
             246  352 - 143 174 196
             246  352 - 143 174 196
             245  349 - 231 231 231
             246  347 - 231 231 231
             245  344 -   0 129 177
             246  341 -   0 128 179
             249  334 -   0 125 182
             250  323 -   0 120 187
             247  315 -   0 116 190
             247  313 -   0 116 191
             242  303 -   0 111 195
             242  299 - 231 231 231
             238  296 -   0 107 197
             240  295 -   0 106 198
             243  289 -   0 103 200
             244  278 -   0  97 204
             247  265 - 201 205 226
             249  262 - 231 231 231
             250  258 - 231 231 231
             252  256 - 231 231 231
             253  251 - 231 231 231
             254  234 -   0  65 220
             255  227 -   0  58 222
             255  221 -   0  51 224
             256  215 -   0  43 226
             260  181 -  89 124 149
             265  173 -  89 124 149
             274  192 -  89 124 149
             282  217 -   0  45 226
             294  232 -   0  63 221
             313  222 -  89 124 149
             331  206 -  89 124 149
             289  203 -   0  16 230
             277  213 -   0  39 227
             216  210 -   0  34 228
             197  209 -  89 124 149
             182  190 -  89 124 149
             223  221 -   0  51 224
             205  268 -   0  91 208
             201  301 -   0 110 195
             229  346 - 153 179 201
             215  356 -   0 134 172
             208  391 -   0 147 155
             198  408 -  89 124 149
             196  417 -  89 124 149
             199  417 -  89 124 149
             234  389 -   0 146 156
             248  385 -   0 145 158
             309  391 -  89 124 149
             305  402 -  89 124 149
             296  408 -  89 124 149
             269  388 -   0 146 156
             266  370 -   0 139 165
             344  415 -  89 124 149
             355  325 -  89 124 149
             294  300 -   0 109 196
             192  307 -  89 124 149
             158  279 -  89 124 149
             254  288 -   0 103 201
        "#,
    )
    .await?;

    from_main(|| {
        STYLE.reset_global::<NumberView>();
    })
    .await;

    Ok(())
}
